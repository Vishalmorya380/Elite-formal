<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manage Stock</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/admin/manageStock.css">
</head>
<body>
  <%- include('../partials/header', { user: user }) %>
  <div class="admin-container">
    <div class="admin-links">
      <a href="/admin/products">Manage Products</a>
      <a href="/admin/stock-management">Manage Stock</a>
      <a href="/admin/users">Manage Users</a>
      <a href="/admin/orders">Manage Orders</a>
      <a href="/admin/analytics">View Analytics</a>
      <a href="/admin/coupons">Manage Coupons</a>
      <div class="sub-links">
        <h3>Product Categories</h3>
        <ul>
          <li>Men
            <ul>
              <li><a href="/admin/stock-management?category=men&subcategory=shirts">Shirts</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=tshirts">T-Shirts</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=jackets">Jackets</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=shoes">Shoes</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=care">Care</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=accessories">Accessories</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=pants">Pants</a></li>
              <li><a href="/admin/stock-management?category=men&subcategory=suits">Suits</a></li>
            </ul>
          </li>
          <li>Women
            <ul>
              <li><a href="/admin/stock-management?category=women&subcategory=shirts">Shirts</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=tshirts">T-Shirts</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=jackets">Jackets</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=pants">Pants</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=dresses">Dresses</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=shoes">Shoes</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=care">Care</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=accessories">Accessories</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=plazo">Plazo</a></li>
              <li><a href="/admin/stock-management?category=women&subcategory=kurti">Kurti</a></li>
            </ul>
          </li>
          <li>Kids
            <ul>
              <li><a href="/admin/stock-management?category=kids&subcategory=shirts">Shirts</a></li>
              <li><a href="/admin/stock-management?category=kids&subcategory=tshirts">T-Shirts</a></li>
              <li><a href="/admin/stock-management?category=kids&subcategory=jackets">Jackets</a></li>
              <li><a href="/admin/stock-management?category=kids&subcategory=pants">Pants</a></li>
              <li><a href="/admin/stock-management?category=kids&subcategory=shoes">Shoes</a></li>
              <li><a href="/admin/stock-management?category=kids&subcategory=accessories">Accessories</a></li>
            </ul>
          </li>
          <li>Special Sections
            <ul>
              <li><a href="/admin/stock-management?special=new_arrivals">New Arrivals</a></li>
              <li><a href="/admin/stock-management?special=sale">Items on Sale</a></li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
    <h2>Manage Stock</h2>
    <% if (success && success.length > 0) { %><p class="success"><%= success %></p><% } %>
    <% if (error && error.length > 0) { %><p class="error"><%= error %></p><% } %>
    <form action="/admin/stock-management" method="POST" id="stock-management-form">
      <div id="stock-entries-container">
        <div class="stock-entry">
          <div class="form-group">
            <label for="productId_0">Product:</label>
            <select id="productId_0" name="stockEntries[0][productId]" required onchange="updateSizeOptions(0)">
              <% products.forEach(product => { %>
                <option value="<%= product._id %>" data-category="<%= product.category %>" data-subcategory="<%= product.subcategory %>">
                  <%= product.name %>
                </option>
              <% }) %>
            </select>
          </div>
          <div class="form-group">
            <label for="color_0">Color:</label>
            <input type="text" id="color_0" name="stockEntries[0][color]">
          </div>
          <div class="form-group">
            <label for="size_0">Size:</label>
            <select id="size_0" name="stockEntries[0][size]">
              <option value="">None</option>
              <!-- Options will be populated dynamically via JavaScript -->
            </select>
          </div>
          <div class="form-group">
            <label for="stockQuantity_0">Stock Quantity:</label>
            <input type="number" id="stockQuantity_0" name="stockEntries[0][stockQuantity]" min="0" value="0" required>
          </div>
        </div>
      </div>
      <button type="button" id="add-stock-entry-btn" class="btn">Add Stock Entry</button>
      <button type="submit" class="btn">Update Stock</button>
    </form>
    <h3>Existing Stock Details</h3>
    <table id="stock-table">
      <thead>
        <tr>
          <th>Product Name</th>
          <th>Color</th>
          <th>Size</th>
          <th>Stock Quantity</th>
          <th>Stock Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% products.forEach(product => { %>
          <% product.stockDetails.forEach((detail, index) => { %>
            <tr data-product-id="<%= product._id %>" 
                data-detail-index="<%= index %>" 
                data-category="<%= product.category %>" 
                data-subcategory="<%= product.subcategory %>"
                data-size="<%= detail.size || '' %>">
              <td><%= product.name %></td>
              <td><%= detail.color || '' %></td>
              <td><%= detail.size || 'N/A' %></td>
              <td><%= detail.stock || 0 %></td>
              <td><%= detail.stock === 0 ? 'Out of Stock' : 'In Stock' %></td>
              <td>
                <button class="btn edit-btn">Edit</button>
                <form action="/admin/stock-management/delete" method="POST" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this stock entry?');">
                  <input type="hidden" name="productId" value="<%= product._id %>">
                  <input type="hidden" name="detailIndex" value="<%= index %>">
                  <button type="submit" class="btn delete-btn">Delete</button>
                </form>
              </td>
            </tr>
            <!-- Edit Form (hidden by default) -->
            <tr class="edit-form-row" id="edit-form-<%= product._id %>-<%= index %>" style="display:none;">
              <td colspan="6">
                <form action="/admin/stock-management/update" method="POST">
                  <input type="hidden" name="productId" value="<%= product._id %>">
                  <input type="hidden" name="detailIndex" value="<%= index %>">
                  <div class="form-group">
                    <label for="edit-color-<%= product._id %>-<%= index %>">Color:</label>
                    <input type="text" id="edit-color-<%= product._id %>-<%= index %>" name="color" value="<%= detail.color || '' %>">
                  </div>
                  <div class="form-group">
                    <label for="edit-size-<%= product._id %>-<%= index %>">Size:</label>
                    <select id="edit-size-<%= product._id %>-<%= index %>" name="size">
                      <option value="">None</option>
                      <!-- Options will be populated dynamically via JavaScript -->
                    </select>
                  </div>
                  <div class="form-group">
                    <label for="edit-stockQuantity-<%= product._id %>-<%= index %>">Stock Quantity:</label>
                    <input type="number" id="edit-stockQuantity-<%= product._id %>-<%= index %>" name="stockQuantity" value="<%= detail.stock || 0 %>" min="0" required>
                  </div>
                  <button type="submit" class="btn">Save Changes</button>
                  <button type="button" class="btn cancel-btn">Cancel</button>
                </form>
              </td>
            </tr>
          <% }) %>
        <% }) %>
      </tbody>
    </table>
  </div>
  <%- include('../partials/footer', { user: user }) %>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Define upper and lower body subcategories
      const upperBodySubcategories = ['shirts', 'tshirts', 'jackets', 'kurti', 'dresses', 'suits'];
      const lowerBodySubcategories = ['pants', 'plazo'];

      // Add new stock entry
      document.getElementById('add-stock-entry-btn').addEventListener('click', function () {
        const container = document.getElementById('stock-entries-container');
        const index = container.querySelectorAll('.stock-entry').length;
        const newStockEntry = `
          <div class="stock-entry">
            <div class="form-group">
              <label for="productId_${index}">Product:</label>
              <select id="productId_${index}" name="stockEntries[${index}][productId]" required onchange="updateSizeOptions(${index})">
                <% products.forEach(product => { %>
                  <option value="<%= product._id %>" data-category="<%= product.category %>" data-subcategory="<%= product.subcategory %>">
                    <%= product.name %>
                  </option>
                <% }) %>
              </select>
            </div>
            <div class="form-group">
              <label for="color_${index}">Color:</label>
              <input type="text" id="color_${index}" name="stockEntries[${index}][color]">
            </div>
            <div class="form-group">
              <label for="size_${index}">Size:</label>
              <select id="size_${index}" name="stockEntries[${index}][size]">
                <option value="">None</option>
              </select>
            </div>
            <div class="form-group">
              <label for="stockQuantity_${index}">Stock Quantity:</label>
              <input type="number" id="stockQuantity_${index}" name="stockEntries[${index}][stockQuantity]" min="0" value="0" required>
            </div>
          </div>
        `;
        container.insertAdjacentHTML('beforeend', newStockEntry);
        // Update size options for the new entry
        updateSizeOptions(index);
      });

      // Event delegation for stock table actions
      const stockTable = document.getElementById('stock-table');
      stockTable.addEventListener('click', function (event) {
        const target = event.target;
        const row = target.closest('tr');
        if (!row) return;

        const productId = row.getAttribute('data-product-id');
        const detailIndex = parseInt(row.getAttribute('data-detail-index'), 10);

        if (target.classList.contains('edit-btn')) {
          showEditForm(productId, detailIndex);
          updateEditSizeOptions(productId, detailIndex);
        } else if (target.classList.contains('cancel-btn')) {
          hideEditForm(productId, detailIndex);
        }
      });

      // Update size options for a stock entry
      function updateSizeOptions(index) {
        const productSelect = document.getElementById(`productId_${index}`);
        const sizeSelect = document.getElementById(`size_${index}`);

        if (!productSelect || !sizeSelect) {
          console.error(`Elements not found for index: ${index}`);
          return;
        }

        const selectedOption = productSelect.options[productSelect.selectedIndex];
        const category = selectedOption.getAttribute('data-category');
        const subcategory = selectedOption.getAttribute('data-subcategory');

        // Clear existing options
        sizeSelect.innerHTML = '<option value="">None</option>';

        // Determine size options based on subcategory
        if (upperBodySubcategories.includes(subcategory)) {
          // Upper body: Use alphabetical sizes
          const alphaSizes = ['S', 'M', 'L', 'XL', 'XXL'];
          alphaSizes.forEach(size => {
            const option = document.createElement('option');
            option.value = size;
            option.text = size;
            sizeSelect.appendChild(option);
          });
          sizeSelect.disabled = false;
        } else if (lowerBodySubcategories.includes(subcategory)) {
          // Lower body: Use numeric sizes for pants or plazo
          if (category === 'men') {
            const menSizes = [28, 30, 32, 34, 36, 38, 40, 42, 44, 48];
            menSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          } else if (category === 'women') {
            const womenSizes = [26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 48];
            womenSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          } else if (category === 'kids') {
            const kidsSizes = [26, 28, 30, 32, 34];
            kidsSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          }
          sizeSelect.disabled = false;
        } else if (subcategory === 'shoes') {
          // Shoes: Different sizes based on category (Men, Women, Kids)
          if (category === 'kids') {
            const kidsOptGroup = document.createElement('optgroup');
            kidsOptGroup.label = 'Kids Sizes (UK)';
            for (let size = 1; size <= 8; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              kidsOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(kidsOptGroup);
          } else if (category === 'men') {
            const menOptGroup = document.createElement('optgroup');
            menOptGroup.label = 'Men Sizes (UK)';
            for (let size = 5; size <= 11; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              menOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(menOptGroup);
          } else if (category === 'women') {
            const womenOptGroup = document.createElement('optgroup');
            womenOptGroup.label = 'Women Sizes (UK)';
            for (let size = 4; size <= 10; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              womenOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(womenOptGroup);
          }
          sizeSelect.disabled = false;
        } else {
          // Other subcategories (e.g., accessories, care): Disable size
          sizeSelect.disabled = true;
        }
      }

      // Update size options for an edit form
      function updateEditSizeOptions(productId, index) {
        const row = document.querySelector(`tr[data-product-id="${productId}"][data-detail-index="${index}"]`);
        const sizeSelect = document.getElementById(`edit-size-${productId}-${index}`);

        if (!row || !sizeSelect) return;

        const category = row.getAttribute('data-category');
        const subcategory = row.getAttribute('data-subcategory');
        const currentSize = row.getAttribute('data-size') || '';

        // Clear existing options
        sizeSelect.innerHTML = '<option value="">None</option>';

        // Determine size options based on subcategory
        if (upperBodySubcategories.includes(subcategory)) {
          // Upper body: Use alphabetical sizes
          const alphaSizes = ['S', 'M', 'L', 'XL', 'XXL'];
          alphaSizes.forEach(size => {
            const option = document.createElement('option');
            option.value = size;
            option.text = size;
            sizeSelect.appendChild(option);
          });
          sizeSelect.disabled = false;
        } else if (lowerBodySubcategories.includes(subcategory)) {
          // Lower body: Use numeric sizes for pants or plazo
          if (category === 'men') {
            const menSizes = [28, 30, 32, 34, 36, 38, 40, 42, 44, 48];
            menSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          } else if (category === 'women') {
            const womenSizes = [26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 48];
            womenSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          } else if (category === 'kids') {
            const kidsSizes = [26, 28, 30, 32, 34];
            kidsSizes.forEach(size => {
              const option = document.createElement('option');
              option.value = size.toString();
              option.text = size.toString();
              sizeSelect.appendChild(option);
            });
          }
          sizeSelect.disabled = false;
        } else if (subcategory === 'shoes') {
          // Shoes: Different sizes based on category (Men, Women, Kids)
          if (category === 'kids') {
            const kidsOptGroup = document.createElement('optgroup');
            kidsOptGroup.label = 'Kids Sizes (UK)';
            for (let size = 1; size <= 8; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              kidsOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(kidsOptGroup);
          } else if (category === 'men') {
            const menOptGroup = document.createElement('optgroup');
            menOptGroup.label = 'Men Sizes (UK)';
            for (let size = 5; size <= 11; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              menOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(menOptGroup);
          } else if (category === 'women') {
            const womenOptGroup = document.createElement('optgroup');
            womenOptGroup.label = 'Women Sizes (UK)';
            for (let size = 4; size <= 10; size++) {
              const option = document.createElement('option');
              option.value = `UK ${size}`;
              option.text = `UK ${size}`;
              womenOptGroup.appendChild(option);
            }
            sizeSelect.appendChild(womenOptGroup);
          }
          sizeSelect.disabled = false;
        } else {
          // Other subcategories (e.g., accessories, care): Disable size
          sizeSelect.disabled = true;
        }

        // Set the selected value
        sizeSelect.value = currentSize;
      }

      function showEditForm(productId, index) {
        const editFormRow = document.getElementById(`edit-form-${productId}-${index}`);
        if (editFormRow) {
          editFormRow.style.display = 'table-row';
        } else {
          console.error(`Edit form not found for productId: ${productId}, index: ${index}`);
        }
      }

      function hideEditForm(productId, index) {
        const editFormRow = document.getElementById(`edit-form-${productId}-${index}`);
        if (editFormRow) {
          editFormRow.style.display = 'none';
        } else {
          console.error(`Edit form not found for productId: ${productId}, index: ${index}`);
        }
      }

      // Initialize size options for the first stock entry
      updateSizeOptions(0);
    });
  </script>
</body>
</html>